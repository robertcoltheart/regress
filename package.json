{
  "name": "regress",
  "displayName": "regress",
  "description": "PostgreSQL query tools",
  "publisher": "Robert Coltheart",
  "version": "0.0.1",
  "icon": "images/extension-icon.png",
  "repository": {
    "url": "https://github.com/robertcoltheart"
  },
  "engines": {
    "vscode": "^1.39.0",
    "azdata": "*"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "grammars": [
      {
        "injectTo": [
          "source.sql"
        ],
        "scopeName": "source.pgsql-injection.sql",
        "path": "./syntaxes/pgsql-injection.json"
      }
    ],
    "snippets": [
      {
        "language": "sql",
        "path": "./snippets/pgsql.json"
      }
    ],
    "connectionProvider": {
      "providerId": "regress",
      "displayName": "PostgreSQL (Regress)",
      "connectionOptions": [
        {
          "specialValueType": "connectionName",
          "isIdentity": true,
          "name": "connectionName",
          "displayName": "Name (optional)",
          "description": "Custom name of the connection",
          "groupName": "Source",
          "valueType": "string",
          "defaultValue": null,
          "objectType": null,
          "categoryValues": null,
          "isRequired": false,
          "isArray": false
        },
        {
          "name": "host",
          "displayName": "Server name",
          "description": "Name of the PostgreSQL instance",
          "valueType": "string",
          "specialValueType": "serverName",
          "isIdentity": true,
          "isRequired": true,
          "groupName": "Source",
          "defaultValue": null,
          "objectType": null,
          "categoryValues": null,
          "isArray": false
        },
        {
          "specialValueType": "authType",
          "isIdentity": true,
          "name": "authenticationType",
          "displayName": "Authentication type",
          "description": "How to authenticate with server",
          "groupName": "Security",
          "valueType": "category",
          "defaultValue": "SqlLogin",
          "objectType": null,
          "categoryValues": [
            {
              "displayName": "Password",
              "name": "SqlLogin"
            },
            {
              "displayName": "Azure Active Directory",
              "name": "AzureMFAAndUser"
            }
          ],
          "isRequired": true,
          "isArray": false
        },
        {
          "name": "dbname",
          "displayName": "Database name",
          "description": "The name of the initial catalog or database int the data source",
          "valueType": "string",
          "specialValueType": "databaseName",
          "isIdentity": true,
          "isRequired": false,
          "groupName": "Source",
          "defaultValue": "postgres"
        },
        {
          "name": "user",
          "displayName": "User name",
          "description": "Indicates the user ID to be used when connecting to the data source",
          "valueType": "string",
          "specialValueType": "userName",
          "isIdentity": true,
          "isRequired": true,
          "groupName": "Security"
        },
        {
          "name": "password",
          "displayName": "Password",
          "description": "Indicates the password to be used when connecting to the data source",
          "valueType": "password",
          "specialValueType": "password",
          "isIdentity": true,
          "isRequired": true,
          "groupName": "Security"
        },
        {
          "name": "hostaddr",
          "displayName": "Host IP address",
          "description": "IP address of the server",
          "valueType": "string",
          "isIdentity": true,
          "groupName": "Server",
          "defaultValue": null
        },
        {
          "name": "port",
          "displayName": "Port",
          "description": "Port number for the server",
          "valueType": "number",
          "isIdentity": true,
          "groupName": "Server",
          "defaultValue": null
        },
        {
          "name": "connectTimeout",
          "displayName": "Connect timeout",
          "description": "Seconds to wait before timing out when connecting",
          "valueType": "number",
          "groupName": "Client",
          "defaultValue": "15"
        },
        {
          "name": "clientEncoding",
          "displayName": "Client encoding",
          "description": "The client encoding for the connection",
          "valueType": "string",
          "groupName": "Client",
          "defaultValue": null
        },
        {
          "name": "options",
          "displayName": "Command-line options",
          "description": "Command-line options to send to the server when the connection starts",
          "valueType": "string",
          "groupName": "Server",
          "defaultValue": null
        },
        {
          "name": "applicationName",
          "displayName": "Application name",
          "description": "Value for the 'application_name' configuration parameter",
          "valueType": "string",
          "groupName": "Client",
          "specialValueType": "appName"
        },
        {
          "name": "sslmode",
          "displayName": "SSL mode",
          "description": "The SSL mode to use when connecting",
          "valueType": "category",
          "groupName": "SSL",
          "categoryValues": [
            {
              "displayName": "Disable",
              "name": "disable"
            },
            {
              "displayName": "Allow",
              "name": "allow"
            },
            {
              "displayName": "Prefer",
              "name": "prefer"
            },
            {
              "displayName": "Require",
              "name": "require"
            },
            {
              "displayName": "Verify-CA",
              "name": "verify-ca"
            },
            {
              "displayName": "Verify-Full",
              "name": "verify-full"
            }
          ],
          "defaultValue": "prefer"
        },
        {
          "name": "sslcompression",
          "displayName": "Use SSL compression",
          "description": "Whether to compress SSL connections",
          "valueType": "boolean",
          "groupName": "SSL"
        },
        {
          "name": "sslcert",
          "displayName": "SSL certificate filename",
          "description": "The filename of the SSL certificate to use",
          "valueType": "string",
          "groupName": "SSL",
          "defaultValue": null
        },
        {
          "name": "sslkey",
          "displayName": "SSL key filename",
          "description": "The filename of the key to use for the SSL certificate",
          "valueType": "string",
          "groupName": "SSL",
          "defaultValue": null
        },
        {
          "name": "sslrootcert",
          "displayName": "SSL root certificate filename",
          "description": "The filename of the SSL root CA certificate to use",
          "valueType": "string",
          "groupName": "SSL",
          "defaultValue": null
        },
        {
          "name": "sslcrl",
          "displayName": "SSL CRL filename",
          "description": "The filename of the SSL certificate revocation list to use",
          "valueType": "string",
          "groupName": "SSL",
          "defaultValue": null
        },
        {
          "name": "requirepeer",
          "displayName": "Require peer",
          "description": "The required username of the server process",
          "valueType": "string",
          "groupName": "Server",
          "defaultValue": null
        },
        {
          "name": "service",
          "displayName": "Service name",
          "description": "The service name in pg_service.conf to use for connection parameters",
          "valueType": "string",
          "groupName": "Client",
          "defaultValue": null
        }
      ]
    },
    "commands": [
      {
        "command": "regress.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "regress.showCurrentConnection",
        "title": "Show Current Connection"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "proposedapi": "node installTypings.js"
  },
  "devDependencies": {
    "@types/azdata": "*",
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "^13.11.0",
    "@types/pg": "^8.6.6",
    "@types/uuid": "^9.0.0",
    "@types/vscode": "^1.39.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "azdata-test": "^1.x",
    "eslint": "^6.8.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.0",
    "typescript": "^4.3.5"
  },
  "dependencies": {
    "pg": "^8.8.0",
    "uuid": "^9.0.0",
    "vscode-nls": "^5.2.0"
  }
}
